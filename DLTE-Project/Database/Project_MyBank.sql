CREATE SEQUENCE MY_BANK_APP_SEQ_CUSTOMER START WITH 100001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_KYC START WITH 120001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_ACCOUNT START WITH 200001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_DEPOSITSAVAIL START WITH 300001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_DEPOSITSGIVEN START WITH 400001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_INSURANCEAVAIL START WITH 500001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_INSURANCEGIVEN START WITH 600001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_DEBITCARD START WITH 700001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_LOANAVAIL START WITH 800001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_LOANGIVEN START WITH 900001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_TRANSACTION START WITH 1000001 INCREMENT BY 1;
CREATE SEQUENCE MY_BANK_APP_SEQ_PAYEE START WITH 1100001 INCREMENT BY 1;

CREATE TABLE MYBANK_APP_CUSTOMER (
    CUSTOMER_ID NUMBER PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(255),
    CUSTOMER_ADDRESS VARCHAR(255),
    CUSTOMER_STATUS VARCHAR(50),
    CUSTOMER_CONTACT NUMBER,
    USERNAME VARCHAR(50) UNIQUE,
    PASSWORD VARCHAR(50)
);

CREATE TABLE MYBANK_APP_KYC (
    KYC_NUMBER NUMBER PRIMARY KEY,
    CUSTOMER_ID NUMBER ,
    KYC_PAN VARCHAR(50) UNIQUE,
    KYC_AADHAAR NUMBER UNIQUE,
    KYC_STATUS VARCHAR(50)
);

CREATE TABLE MYBANK_APP_ACCOUNT (
    ACCOUNT_ID NUMBER PRIMARY KEY,
    CUSTOMER_ID NUMBER,
    ACCOUNT_TYPE VARCHAR(50),
    ACCOUNT_NUMBER NUMBER UNIQUE,
    ACCOUNT_STATUS VARCHAR(50)  
);

CREATE TABLE MYBANK_APP_DEPOSITSAVAILABLE (
    DEPOSIT_ID NUMBER PRIMARY KEY,
    DEPOSIT_NAME VARCHAR(255),
    DEPOSIT_ROI DECIMAL(15,2),
    DEPOSIT_TYPE VARCHAR(50),
    DEPOSIT_DESCRIPTION VARCHAR(255)
);

CREATE TABLE MYBANK_APP_DEPOSITSAVAILED (
    DEPOSIT_AVAIL_ID NUMBER PRIMARY KEY,
    CUSTOMER_ID NUMBER,
    DEPOSIT_ID NUMBER,
    DEPOSITED_AMOUNT DECIMAL(15,2),
    DEPOSITED_DURATION INT,
    DEPOSIT_MATURITY DATE
   
);

CREATE TABLE MYBANK_APP_INSURANCEAVAILABLE (
    INSURANCE_ID NUMBER PRIMARY KEY,
    INSURANCE_TYPE VARCHAR(50),
    INSURANCE_NAME VARCHAR(255),
    INSURANCE_KEY_BENEFITS VARCHAR(255),
    INSURANCE_LIFETIME INT
);

CREATE TABLE MYBANK_APP_INSURANCEAVAILED (
    INSURANCE_AVAILED_ID NUMBER PRIMARY KEY,
    CUSTOMER_ID NUMBER,
    INSURANCE_ID NUMBER,
    INSURANCE_COVERAGE DECIMAL(15,2),
    INSURANCE_PREMIUM DECIMAL(15,2)
   
);

CREATE TABLE MYBANK_APP_DEBITCARD (
    DEBITCARD_NUMBER NUMBER PRIMARY KEY,
    ACCOUNT_ID NUMBER,
    CUSTOMER_ID NUMBER,
    DEBITCARD_CVV INT,
    DEBITCARD_PIN INT,
    DEBITCARD_EXPIRY DATE,
    DEBITCARD_STATUS VARCHAR(50),
    DEBITCARD_DOMESTIC_LIMIT DECIMAL(15,2),
    DEBITCARD_INTERNATIONAL_LIMIT DECIMAL(15,2)
    
);

CREATE TABLE MYBANK_APP_LOANAVAILABLE (
    LOAN_ID NUMBER PRIMARY KEY,
    LOAN_TYPE VARCHAR(50),
    LOAN_NAME VARCHAR(255),
    LOAN_DESCRIPTION VARCHAR(255),
    LOAN_ROI DECIMAL(15,2)
);

CREATE TABLE MYBANK_APP_LOANAVAILED (
    LOAN_APP_ID NUMBER PRIMARY KEY,
    CUSTOMER_ID NUMBER,
    LOAN_ID NUMBER,
    LOAN_AMOUNT DECIMAL(15,2),
    LOAN_EMI DECIMAL(15,2),
    LOAN_TENURE INT
);

CREATE TABLE MYBANK_APP_TRANSACTION (
    TRANSACTION_ID NUMBER PRIMARY KEY,
    ACCOUNT_ID NUMBER,
    TRANSACTION_TYPE VARCHAR(50),
    TRANSACTION_FROM VARCHAR(255),
    TRANSACTION_TO VARCHAR(255),
    TRANSACTION_DATE DATE,
    TRANSACTION_AMOUNT DECIMAL(15,2),
    TRANSACTION_STATUS VARCHAR(50)
    
);

CREATE TABLE MYBANK_APP_PAYEE (
    PAYEE_ID NUMBER PRIMARY KEY,
    CUSTOMER_ID NUMBER,
    ACCOUNT_ID NUMBER,
    PAYEE_NAME VARCHAR(255) 
);


ALTER TABLE MYBANK_APP_KYC
ADD CONSTRAINT FK_KYC_CUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES MYBANK_APP_CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_ACCOUNT
ADD CONSTRAINT FK_ACCOUNT_CUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES MYBANK_APP_CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_DEPOSITSAVAILED
ADD CONSTRAINT FK_DEPOSITSAVAILED_CUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES MYBANK_APP_CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_DEPOSITSAVAILED
ADD CONSTRAINT FK_DEPOSGIVEN_DEPOAVAILABLE
FOREIGN KEY (DEPOSIT_ID)
REFERENCES MYBANK_APP_DEPOSITSAVAILABLE(DEPOSIT_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_INSURANCEAVAILED
ADD CONSTRAINT FK_INSURANCEAVAILED_CUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES MYBANK_APP_CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_INSURANCEAVAILED
ADD CONSTRAINT FK_INSUREGIVEN_INSUREAVAILABLE
FOREIGN KEY (INSURANCE_ID)
REFERENCES MYBANK_APP_INSURANCEAVAILABLE(INSURANCE_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_DEBITCARD
ADD CONSTRAINT FK_DEBITCARD_CUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES MYBANK_APP_CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_DEBITCARD
ADD CONSTRAINT FK_DEBITCARD_ACCOUNT
FOREIGN KEY (ACCOUNT_ID)
REFERENCES MYBANK_APP_ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_LOANAVAILED
ADD CONSTRAINT FK_LOANAVAILED_CUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES MYBANK_APP_CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_LOANAVAILED
ADD CONSTRAINT FK_LOANAVAILED_LOANAVAILABLE
FOREIGN KEY (LOAN_ID)
REFERENCES MYBANK_APP_LOANAVAILABLE(LOAN_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_TRANSACTION
ADD CONSTRAINT FK_TRANSACTION_ACCOUNT
FOREIGN KEY (ACCOUNT_ID)
REFERENCES MYBANK_APP_ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_PAYEE
ADD CONSTRAINT FK_PAYEE_CUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES MYBANK_APP_CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE;

ALTER TABLE MYBANK_APP_PAYEE
ADD CONSTRAINT FK_PAYEE_ACCOUNT
FOREIGN KEY (ACCOUNT_ID)
REFERENCES MYBANK_APP_ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE;


CREATE OR REPLACE TRIGGER MYBANK_APP_CUSTOMER_ID_TRG
BEFORE INSERT ON MYBANK_APP_CUSTOMER
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_CUSTOMER.NEXTVAL
    INTO :NEW.CUSTOMER_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_KYC_ID_TRG
BEFORE INSERT ON MYBANK_APP_KYC
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_KYC.NEXTVAL
    INTO :NEW.KYC_NUMBER
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_ACCOUNT_ID_TRG
BEFORE INSERT ON MYBANK_APP_ACCOUNT
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_ACCOUNT.NEXTVAL
    INTO :NEW.ACCOUNT_ID
    FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER MYBANK_APP_DEPOAVAIL_ID_TRG
BEFORE INSERT ON MYBANK_APP_DEPOSITSAVAILABLE
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_DEPOSITSAVAIL.NEXTVAL
    INTO :NEW.DEPOSIT_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_DEPOGIVEN_ID_TRG
BEFORE INSERT ON MYBANK_APP_DEPOSITSAVAILED
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_DEPOSITSGIVEN.NEXTVAL
    INTO :NEW.DEPOSIT_AVAIL_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_INSUREAVAIL_ID_TRG
BEFORE INSERT ON MYBANK_APP_INSURANCEAVAILABLE
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_INSURANCEAVAIL.NEXTVAL
    INTO :NEW.INSURANCE_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_INSUREGIVEN_ID_TRG
BEFORE INSERT ON MYBANK_APP_INSURANCEAVAILED
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_INSURANCEGIVEN.NEXTVAL
    INTO :NEW.INSURANCE_AVAILED_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_DEBITCARD_ID_TRG
BEFORE INSERT ON MYBANK_APP_DEBITCARD
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_DEBITCARD.NEXTVAL
    INTO :NEW.DEBITCARD_NUMBER
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_LOANAVAIL_ID_TRG
BEFORE INSERT ON MYBANK_APP_LOANAVAILABLE
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_LOANAVAIL.NEXTVAL
    INTO :NEW.LOAN_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_LOANGIVEN_ID_TRG
BEFORE INSERT ON MYBANK_APP_LOANAVAILED
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_LOANGIVEN.NEXTVAL
    INTO :NEW.LOAN_APP_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_TRANSACTION_ID_TRG
BEFORE INSERT ON MYBANK_APP_TRANSACTION
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_TRANSACTION.NEXTVAL
    INTO :NEW.TRANSACTION_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MYBANK_APP_PAYEE_ID_TRG
BEFORE INSERT ON MYBANK_APP_PAYEE
FOR EACH ROW
BEGIN
    SELECT MY_BANK_APP_SEQ_PAYEE.NEXTVAL
    INTO :NEW.PAYEE_ID
    FROM DUAL;
END;
